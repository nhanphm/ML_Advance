# -*- coding: utf-8 -*-
"""ToyExample(weight_and_height).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I-OZ4iL8ErAhdTzBhi8BV1oWnhMTVlxV
"""

import sklearn
sklearn.__version__

print(__doc__)
import matplotlib.pyplot as plt

import numpy as np
from sklearn.svm import SVR

X = np.array([147,150,153,155,158,160,163,165,168,170,173,175,178,180,183]).reshape(-1,1)
y = np.array([49,50,51,52,54,56,58,59,60,72,63,64,66,67,68]).reshape(-1,1)
#print(X)

svr_rbf = SVR(kernel='rbf', C=1e3, gamma=0.1)
svr_lin = SVR(kernel='linear', C=1e3)
svr_poly = SVR(kernel='poly', C=1e3, degree=2)
y_rbf = svr_rbf.fit(X, y).predict(X)
y_lin = svr_lin.fit(X, y).predict(X)
y_poly = svr_poly.fit(X, y).predict(X)

def data_to_plotly(x):
    k = []
    
    for i in range(0, len(x)):
        k.append(x[i][0])
        
    return k

plt.plot(data_to_plotly(X),y,color='green', 
         marker='o', markerfacecolor='yellow', markersize=5, label="data")
plt.plot(data_to_plotly(X),y_rbf,color='navy', label="RBF model")
plt.plot(data_to_plotly(X),y_lin,color='cyan', label="Linear model")
plt.plot(data_to_plotly(X),y_poly,color='cornflowerblue', label="Polynomial model")

# naming the x axis 
plt.xlabel('x - Chieu cao') 
# naming the y axis 
plt.ylabel('y - Can nang') 
# giving a title to my graph 
plt.title('Support Vector Regression') 
  
# show a legend on the plot 
plt.legend() 
  
# function to show the plot 
plt.show()